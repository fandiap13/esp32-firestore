// #include <Arduino.h>
// #include <Firebase_ESP_Client.h>
// #include <WiFi.h>
// #include <time.h>
// #include <ArduinoJson.h>

// #define WIFI_SSID "P"
// #define WIFI_PASSWORD "fandiaziz"
// #define API_KEY "AIzaSyDcOR7jccgDQa4UpBom546w6gqHCJv-oNg"
// #define FIREBASE_PROJECT_ID "esp32-firestore-40b81"
// #define USER_EMAIL "andiazizp123@gmail.com"
// #define USER_PASSWORD "@Fandiaz123"

// #define PEMANAS_PIN 12
// #define PENDINGIN_PIN 13

// // DEFINE FIREBASE
// FirebaseData fbdo;
// FirebaseAuth auth;
// FirebaseConfig config;

// unsigned long dataMillis = 0;
// int count = 0;

// void connectWiFi();
// void firebaseInitialized();
// void getDocument();

// DynamicJsonDocument doc(1024);

// void setup()
// {
//   Serial.begin(115200);
//   pinMode(LED_BUILTIN, OUTPUT);
//   pinMode(PEMANAS_PIN, OUTPUT);
//   pinMode(PENDINGIN_PIN, OUTPUT);

//   digitalWrite(PEMANAS_PIN, LOW);
//   digitalWrite(PENDINGIN_PIN, LOW);

//   // Set the time zone to WIB (Waktu Indonesia Barat)
//   configTime(7 * 3600, 0, "pool.ntp.org", "time.nist.gov");

//   connectWiFi();
//   firebaseInitialized();
// }

// void loop()
// {
//   if (WiFi.status() != WL_CONNECTED)
//   {
//     connectWiFi();
//   }

//   time_t now;
//   struct tm timeinfo;
//   if (!getLocalTime(&timeinfo))
//   {
//     Serial.println("Failed to obtain time");
//     return;
//   }

//   if (Firebase.ready())
//   {
//     getDocument();

//     // Serial.println("--------------------------------");
//     // Serial.println(dataMillis);
//     // Serial.println(millis());
//     // Serial.println(millis() - dataMillis);

//     // PENGIRIMAN DATA SETIAP 1 MENIT
//     if (dataMillis == 0 || (millis() - dataMillis) > 60000)
//     {
//       dataMillis = millis();
//       FirebaseJson content;
//       // Format the date and time
//       char formattedDate[21];
//       // String date = "2014-10-02T15:01:23Z";
//       strftime(formattedDate, sizeof(formattedDate), "%Y-%m-%dT%H:%M:%SZ", &timeinfo);
//       Serial.println(formattedDate);

//       String documentPath = "tempHum";
//       // save data temperature
//       content.set("fields/temperature/doubleValue", random(1, 500) / 100.0);
//       content.set("fields/humidity/doubleValue", random(1, 500) / 100.0);
//       content.set("fields/date/timestampValue", formattedDate);
//       count++;

//       Serial.println("Create a document... ");

//       if (!Firebase.Firestore.createDocument(&fbdo, FIREBASE_PROJECT_ID, "" /* databaseId can be (default) or empty */, documentPath.c_str(), content.raw()))
//       {
//         Serial.println(fbdo.errorReason());
//       }
//     }
//   }

//   delay(1000);
// }

// void connectWiFi()
// {
//   digitalWrite(LED_BUILTIN, LOW);
//   Serial.print("Connecting");
//   WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
//   while (WiFi.status() != WL_CONNECTED)
//   {
//     Serial.print(".");
//     delay(500);
//   }
//   Serial.println("");
//   Serial.print("Wifi Connected to ");
//   Serial.println(WiFi.SSID());
//   digitalWrite(LED_BUILTIN, HIGH);
// }

// void firebaseInitialized()
// {
//   Serial.printf("Firebase Client v%s\n\n", FIREBASE_CLIENT_VERSION);
//   config.api_key = API_KEY;

//   auth.user.email = USER_EMAIL;
//   auth.user.password = USER_PASSWORD;

//   // Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set.
//   // Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.
//   fbdo.setBSSLBufferSize(4096 /* Rx buffer size in bytes from 512 - 16384 */, 1024 /* Tx buffer size in bytes from 512 - 16384 */);

//   // Limit the size of response payload to be collected in FirebaseData
//   fbdo.setResponseSize(2048);

//   Firebase.reconnectNetwork(true);
//   Firebase.begin(&config, &auth);
// }

// void getDocument()
// {
//   String documentPath = "control/fH0d1r91O2Q8fnix2Oa6";
//   String mask = "";
//   if (Firebase.Firestore.getDocument(&fbdo, FIREBASE_PROJECT_ID, "", documentPath.c_str(), mask.c_str()))
//   {
//     String result = fbdo.payload().c_str();
//     deserializeJson(doc, result);

//     String pendingin = doc["fields"]["pendingin"]["stringValue"].as<const char *>();
//     String pemanas = doc["fields"]["pemanas"]["stringValue"].as<const char *>();

//     digitalWrite(PENDINGIN_PIN, String(pendingin) == "ON" ? HIGH : LOW);
//     digitalWrite(PEMANAS_PIN, String(pemanas) == "ON" ? HIGH : LOW);

//     // Serial.println("================================================");
//     // Serial.println(pendingin == "ON" ? HIGH : LOW);
//     // Serial.println(pemanas == "ON" ? HIGH : LOW);
//     // Serial.println("");
//     // Serial.println("Pendingin status : " + String(pendingin));
//     // Serial.println("pemanas status : " + String(pemanas));
//     // Serial.println("ON");
//     // Serial.println("================================================");
//   }
//   else
//   {
//     Serial.println(fbdo.errorReason());
//   }
// }