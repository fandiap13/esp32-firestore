// #include <Arduino.h>
// #include <Firebase_ESP_Client.h>
// #include <WiFi.h>

// #define WIFI_SSID "P"
// #define WIFI_PASSWORD "fandiaziz"
// #define API_KEY "AIzaSyDcOR7jccgDQa4UpBom546w6gqHCJv-oNg"
// #define FIREBASE_PROJECT_ID "esp32-firestore-40b81"
// #define USER_EMAIL "andiazizp123@gmail.com"
// #define USER_PASSWORD "@Fandiaz123"

// // DEFINE FIREBASE
// FirebaseData fbdo;
// FirebaseAuth auth;
// FirebaseConfig config;

// unsigned long dataMillis = 0;
// int count = 0;

// void connectWiFi();
// void firebaseInitialized();

// void setup()
// {
//   pinMode(LED_BUILTIN, OUTPUT);

//   Serial.begin(115200);
//   connectWiFi();
//   firebaseInitialized();
// }

// void loop()
// {
//   if (WiFi.status() != WL_CONNECTED)
//   {
//     connectWiFi();
//   }

//   // Serial.println("Cek bro");
//   Serial.println("================================================");
//   Serial.println(dataMillis);
//   Serial.println(millis() - dataMillis);
//   Serial.println("================================================");

//   if (Firebase.ready() && (millis() - dataMillis > 60000 || dataMillis == 0))
//   {
//     dataMillis = millis();
//     FirebaseJson content;

//     String documentPath = "tempHum";
//     // String documentPath = "tempHum-" + String(count);

//     // If the document path contains space e.g. "a b c/d e f"
//     // It should encode the space as %20 then the path will be "a%20b%20c/d%20e%20f"

//     // double
//     content.set("fields/myDouble/doubleValue", random(1, 500) / 100.0);

//     // boolean
//     content.set("fields/myBool/booleanValue", true);

//     // integer
//     content.set("fields/myInteger/integerValue", String(random(500, 1000)));

//     // null
//     content.set("fields/myNull/nullValue"); // no value set

//     String doc_path = "projects/";
//     doc_path += FIREBASE_PROJECT_ID;
//     doc_path += "/databases/(default)/documents/coll_id/doc_id"; // coll_id and doc_id are your collection id and document id

//     // reference
//     content.set("fields/myRef/referenceValue", doc_path.c_str());

//     // timestamp
//     content.set("fields/myTimestamp/timestampValue", "2014-10-02T15:01:23Z"); // RFC3339 UTC "Zulu" format

//     // bytes
//     content.set("fields/myBytes/bytesValue", "aGVsbG8="); // base64 encoded

//     // array
//     content.set("fields/myArray/arrayValue/values/[0]/stringValue", "test");
//     content.set("fields/myArray/arrayValue/values/[1]/integerValue", "20");
//     content.set("fields/myArray/arrayValue/values/[2]/booleanValue", true);

//     // map
//     content.set("fields/myMap/mapValue/fields/name/stringValue", "wrench");
//     content.set("fields/myMap/mapValue/fields/mass/stringValue", "1.3kg");
//     content.set("fields/myMap/mapValue/fields/count/integerValue", "3");

//     // lat long
//     content.set("fields/myLatLng/geoPointValue/latitude", 1.486284);
//     content.set("fields/myLatLng/geoPointValue/longitude", 23.678198);

//     count++;

//     Serial.print("Create a document... ");

//     if (Firebase.Firestore.createDocument(&fbdo, FIREBASE_PROJECT_ID, "" /* databaseId can be (default) or empty */, documentPath.c_str(), content.raw()))
//       Serial.printf("ok\n%s\n\n", fbdo.payload().c_str());
//     else
//       Serial.println(fbdo.errorReason());
//   }

//   delay(1000);
// }

// void connectWiFi()
// {
//   digitalWrite(LED_BUILTIN, LOW);
//   Serial.print("Connecting");
//   WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
//   while (WiFi.status() != WL_CONNECTED)
//   {
//     Serial.print(".");
//     delay(500);
//   }
//   Serial.println("");
//   Serial.print("Wifi Connected to ");
//   Serial.println(WiFi.SSID());
//   digitalWrite(LED_BUILTIN, HIGH);
// }

// void firebaseInitialized()
// {
//   Serial.printf("Firebase Client v%s\n\n", FIREBASE_CLIENT_VERSION);
//   config.api_key = API_KEY;

//   auth.user.email = USER_EMAIL;
//   auth.user.password = USER_PASSWORD;

//   // Since v4.4.x, BearSSL engine was used, the SSL buffer need to be set.
//   // Large data transmission may require larger RX buffer, otherwise connection issue or data read time out can be occurred.
//   fbdo.setBSSLBufferSize(4096 /* Rx buffer size in bytes from 512 - 16384 */, 1024 /* Tx buffer size in bytes from 512 - 16384 */);

//   // Limit the size of response payload to be collected in FirebaseData
//   fbdo.setResponseSize(2048);

//   Firebase.reconnectNetwork(true);
//   Firebase.begin(&config, &auth);
// }
